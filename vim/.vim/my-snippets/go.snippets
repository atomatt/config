snippet main "Basic main package" b
package main

func main() {
	${0}
}
endsnippet

snippet eret "" b
if err != nil {
	return $1err
}$0
endsnippet

snippet eretf "" b
if err != nil {
	return fmt.Errorf("$1 (%s)", err.Error())
}$0
endsnippet

snippet elog "" b
if err != nil {
	log.Fatal(err)
}$0
endsnippet

snippet todo "Todo item" w
// TODO${1:(matt)}: $0
endsnippet

snippet bug "Known bug item" w
// BUG${1:(matt)}: $0
endsnippet

snippet xxx "Warning comment" w
// XXX: $0
endsnippet

snippet http "ServeHTTP stub" w
func ${1: (${2}) ServeHTTP}(w http.ResponseWriter, r *http.Request) {
	$0
}
endsnippet

snippet httpc "ServeHTTPC stub" w
func ${1: (${2}) ServeHTTPC}(c context.Context, w http.ResponseWriter, r *http.Request) {
	$0
}
endsnippet

snippet T "" b
func Test$1(t *testing.T) {
	$0
}
endsnippet

snippet must "must" b
func must(err error, format string, a ...interface{}) {
	if err != nil {
		msg := fmt.Sprintf(format, a...)
		panic(msg + " [" + err.Error() + "]")
	}
}
endsnippet
